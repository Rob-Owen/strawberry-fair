{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./src/components/MainTileWithTwoStackedSideTiles.jsx","webpack:///./src/components/NewsArticleSnapshots.jsx","webpack:///./src/templates/news-overview.jsx","webpack:///./src/components/NewsMenu.jsx"],"names":["$export","$entries","S","entries","it","MainTileWithTwoStackedSideTiles","mainTile","sideTopTile","sideBottomTile","className","NewsArticleSnapshot","newsArticles","publicationDate","Date","node","frontmatter","date","imageInfo","_","get","image","to","fields","slug","PreviewCompatibleImage","style","width","title","toDateString","content","shortExcerpt","longExcerpt","NewsArticleSnapshots","newsArticleSnapshots","map","key","NewsOverview","featuredId","moreNews","length","moveArticleToTheFront","getIndexOfFeaturedArticle","Fragment","slice","newsArticle","site","additionalPropsExtractor","data","allMarkdownRemark","edges","featuredArticle","markdownRemark","isWide","query","articles","findIndex","article","uniqueId","articleIndex","splice","unshift","NewsMenu","menuEntries","filter","nYears","today","getFullYear","isDateInLastNYears","forEach","year","month","getMonth","undefined","includes","push","getMenuEntries","Object","sort","year1","months","MonthItemsForYear","monthName","monthNumber"],"mappings":"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","file":"component---src-templates-news-overview-jsx-86c0693d19c9544d73c6.js","sourcesContent":["// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst MainTileWithTwoStackedSideTiles = ({mainTile, sideTopTile, sideBottomTile}) => (\r\n  <div className=\"tile is-ancestor\">\r\n    <div className=\"tile is-parent\">\r\n      <div className=\"tile is-child box main-box\">\r\n        {mainTile}\r\n      </div>\r\n    </div>\r\n    <div className=\"tile is-4 is-vertical is-parent small-box\">\r\n      <div className=\"tile is-child box small-box\">\r\n        {sideTopTile}  \r\n      </div>\r\n      <div className=\"tile is-child box small-box\">\r\n        {sideBottomTile}  \r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nMainTileWithTwoStackedSideTiles.propTypes = {\r\n  mainTile: PropTypes.element,\r\n  sideTopTile: PropTypes.element,\r\n  sideBottomTile: PropTypes.element\r\n}\r\n\r\nexport default MainTileWithTwoStackedSideTiles\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\nimport _ from 'lodash'\r\n\r\nimport PreviewCompatibleImage from './PreviewCompatibleImage'\r\nimport MainTileWithTwoStackedSideTiles from './MainTileWithTwoStackedSideTiles'\r\nimport { newsArticleValidator } from './validators'\r\nimport { HTMLContent } from './Content'\r\nimport { toDateString } from '../util/dates'\r\n\r\n//display style of the event date\r\nexport const displayStyle = {\r\n  day: \"numeric\",\r\n  month: \"long\",\r\n  year: \"numeric\"\r\n}\r\n\r\nexport const NewsArticleSnapshot = ({newsArticles}) => {\r\n  const publicationDate = new Date(newsArticles.node.frontmatter.date)\r\n\r\n  const imageInfo = _.get(\r\n    newsArticles.node.frontmatter.image,\r\n    'srcNode.childImageSharp.fixedAspect',\r\n    newsArticles.node.frontmatter.image\r\n  )\r\n  const imageWrapperStyle = {\r\n    width: \"100%\"\r\n  }\r\n\r\n  return (\r\n    <article className=\"news-preview\">\r\n      <Link to={newsArticles.node.fields.slug}>\r\n        <PreviewCompatibleImage imageInfo={imageInfo} style={imageWrapperStyle} />\r\n        <h2 className=\"title is-5 news-snapshot-title\">{newsArticles.node.frontmatter.title}</h2>\r\n      </Link>\r\n      <h3 className=\"subtitle is-7\">{toDateString(publicationDate)}</h3>\r\n      <HTMLContent content={newsArticles.node.shortExcerpt} className=\"news-excerpt news-excerpt-short\" />\r\n      <HTMLContent content={newsArticles.node.longExcerpt} className=\"news-excerpt news-excerpt-long\" />\r\n  </article>\r\n  )\r\n}\r\n\r\nNewsArticleSnapshot.propTypes = {\r\n  newsArticles: newsArticleValidator\r\n}\r\n\r\nconst NewsArticleSnapshots = ({newsArticles}) => {\r\n  const newsArticleSnapshots = newsArticles.map(newsArticles => \r\n    <NewsArticleSnapshot \r\n      newsArticles={newsArticles}\r\n      key={newsArticles.node.fields.slug}\r\n    />\r\n  )\r\n\r\n  return (\r\n    <MainTileWithTwoStackedSideTiles \r\n      mainTile={newsArticleSnapshots[0]}\r\n      sideTopTile={newsArticleSnapshots[1]}\r\n      sideBottomTile={newsArticleSnapshots[2]}\r\n    />\r\n  )\r\n}\r\n\r\nNewsArticleSnapshots.propTypes = {\r\n  newsArticles: PropTypes.arrayOf(newsArticleValidator)\r\n}\r\n\r\nexport default NewsArticleSnapshots","import React from 'react'\nimport { graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\n\nimport NewsArticleSnapshots, { NewsArticleSnapshot } from '../components/NewsArticleSnapshots'\nimport { site } from '../util/templating'\nimport NewsMenu from '../components/NewsMenu.jsx'\n\n\n// This is used by the website and for CMS previews\nexport const NewsOverview = ({newsArticles, featuredId}) => {\n  // Only show \"more news\" if there are more than three news articles\n  const moreNews = newsArticles.length > 3\n  \n  if (featuredId) {\n    moveArticleToTheFront(getIndexOfFeaturedArticle(featuredId, newsArticles), newsArticles)\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"columns\">\n        <div className = \"column is-four-fifths\">\n          <NewsArticleSnapshots newsArticles={newsArticles}/>\n        </div>\n        <div className = \"column\">\n          <NewsMenu newsArticles={newsArticles}/>\n        </div>          \n      </div>\n      { moreNews &&\n      (\n        <React.Fragment>\n          <h2 className=\"subtitle\">More news</h2>\n          <hr className=\"more-news-hr\" />\n          <div className=\"columns is-multiline\">\n            {newsArticles.slice(3, 9).map(newsArticle => (  // Show the next 1-6 articles\n              <div key={newsArticle.node.fields.slug} className=\"column small-box is-one-third\">\n                <NewsArticleSnapshot newsArticles={newsArticle} />\n              </div>\n            ))}\n          </div>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n\nNewsOverview.propTypes = {\n  newsArticles: NewsArticleSnapshots.propTypes.newsArticles,\n  featuredId: PropTypes.string\n}\n\nconst extractor = (data) => ({newsArticles: data.allMarkdownRemark.edges, featuredArticle: data.markdownRemark.frontmatter.featuredArticle})\n\nexport default site(NewsOverview, { additionalPropsExtractor: extractor, isWide: true })\n\nexport const query = graphql`\nquery newsOverviewTemplate($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        title\n        subtitle\n        featuredId\n      }\n      html\n    }\n    allMarkdownRemark(filter: {frontmatter: {templateKey: {eq: \"news-article\"}}}, sort: {fields: frontmatter___date, order: DESC}) {\n      edges {\n        node {\n          ...NewsFragment\n        }\n      }\n    }\n    heroData: allMarkdownRemark(filter: {id: {eq: $id}}) {\n      ...HeroFragment\n    }\n  }\n`\nconst getIndexOfFeaturedArticle = (featuredId, articles) => {\n  return articles.findIndex(article => article.node.frontmatter.uniqueId === featuredId)\n}\n\nconst moveArticleToTheFront = (articleIndex, articles) => {\n  if(articleIndex !== -1) {\n    const article = articles[articleIndex]\n    articles.splice(articleIndex, 1)\n    articles.unshift(article)\n  }\n}\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\n\r\nimport NewsArticleSnapshots from '../components/NewsArticleSnapshots'\r\n\r\nconst NewsMenu = ({newsArticles}) => {\r\n    const menuEntries = getMenuEntries(newsArticles)\r\n    return (\r\n        <nav className=\"menu\">\r\n            <h1 className = \"subtitle\">\r\n                Archive\r\n            </h1>\r\n            {Object.entries(menuEntries)\r\n                .sort(([year1], [year2]) => year2 - year1)\r\n                .map(([year, months]) => <MonthItemsForYear key={year} year={year} months={months}/> )}\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NewsMenu\r\n\r\nconst MonthItemsForYear = ({year, months}) => (\r\n    <React.Fragment>\r\n        <Link to ={`/news/${year}`} className=\"menu-label\">{year}</Link>\r\n        <ul className=\"menu-list\">\r\n            {months.sort().map(month => (\r\n                <li key={month}>\r\n                    <Link to={`/news/${year}/${month + 1}`}>\r\n                        {monthName(month)}\r\n                    </Link>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    </React.Fragment>\r\n)\r\n\r\n\r\nexport function monthName(monthNumber) {\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n    return monthNames[monthNumber]\r\n}\r\n\r\nfunction getMenuEntries(newsArticles) {\r\n    let menuEntries = {}\r\n\r\n    newsArticles\r\n        .map(newsArticle => new Date(newsArticle.node.frontmatter.date))\r\n        .filter(date => isDateInLastNYears(date, 3))\r\n        .forEach(date => {\r\n            const year = date.getFullYear()\r\n            const month = date.getMonth()\r\n            if (menuEntries[year] === undefined) {\r\n                menuEntries[year] = []\r\n            }\r\n            \r\n            if(!menuEntries[year].includes(month)) {\r\n                menuEntries[year].push(month)\r\n            }\r\n        })\r\n    \r\n    return menuEntries\r\n}\r\n\r\nfunction isDateInLastNYears(date, nYears) {\r\n    // Is the date 'date' within the last n years of today?\r\n    const today = new Date()\r\n    return date.getFullYear() >= today.getFullYear() - nYears + 1\r\n}\r\n\r\nNewsMenu.propTypes = {\r\n    newsArticles: NewsArticleSnapshots.propTypes.newsArticles\r\n}\r\n\r\nMonthItemsForYear.propTypes = {\r\n    year: PropTypes.string,\r\n    months: PropTypes.arrayOf(PropTypes.number)\r\n}\r\n"],"sourceRoot":""}
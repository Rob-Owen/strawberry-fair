{"version":3,"sources":["webpack:///./src/components/NewsArticleSideInfo.jsx","webpack:///./src/templates/news-article.jsx"],"names":["NewsArticleSideInfo","author","tags","date","formattedDate","Date","toLocaleDateString","year","month","day","formattedTags","join","className","NewsArticle","content","image","BodyComponent","contentComponent","HTMLContent","Fragment","PreviewCompatibleImage","imageInfo","query","site"],"mappings":"qJAyBeA,EAtBa,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KACpCC,EAAgB,IAAIC,KAAKF,GAAMG,mBAAmB,QAAS,CAACC,KAAM,UAAWC,MAAO,OAAQC,IAAK,YACjGC,EAAgBR,GAAQA,EAAKS,KAAK,MAExC,OACE,yBAAKC,UAAU,qBACb,wBAAIA,UAAU,6CAA6CX,GAC3D,wBAAIW,UAAU,YACd,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mCAAmCF,GAClD,6BAAMN,M,YCbd,kFAUO,IAAMS,EAAc,SAAC,GAA4D,IAA3DZ,EAA0D,EAA1DA,OAAQa,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,MAAOZ,EAAkC,EAAlCA,KAAMD,EAA4B,EAA5BA,KACjDc,EAD6E,EAAtBC,kBACnBC,IAE1C,OACE,kBAAC,IAAMC,SAAP,KACE,4BAAQP,UAAU,SACfG,GAAS,kBAACK,EAAA,EAAD,CAAwBC,UAAWN,KAE/C,6BACA,yBAAKH,UAAU,WACb,yBAAKA,UAAU,uBACb,kBAAC,EAAD,CAAqBX,OAAQA,EAAQE,KAAMA,EAAMD,KAAMA,KAEzD,yBAAKU,UAAU,UACb,kBAACI,EAAD,CAAeF,QAASA,QAiBvBQ,GAFEC,sBAAKV,GAEF","file":"component---src-templates-news-article-jsx-47ab7b22d87479a2aac1.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst NewsArticleSideInfo = ({author, tags, date}) => {\r\n  const formattedDate = new Date(date).toLocaleDateString('en-UK', {year: 'numeric', month: 'long', day: 'numeric'});\r\n  const formattedTags = tags && tags.join(', ')\r\n\r\n  return (\r\n    <div className=\"news-article-info\">\r\n      <h4 className=\"is-capitalized has-text-primary is-size-5\">{author}</h4>\r\n      <hr className=\"divider\" />\r\n      <div className=\"bottom-section\">\r\n        <div className=\"has-text-primary is-capitalized\">{formattedTags}</div>\r\n        <div>{formattedDate}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nNewsArticleSideInfo.propTypes = {\r\n  author: PropTypes.string,\r\n  tags: PropTypes.arrayOf(PropTypes.string),\r\n  date: PropTypes.string\r\n}\r\n\r\nexport default NewsArticleSideInfo\r\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport PreviewCompatibleImage from '../components/PreviewCompatibleImage'\nimport { HTMLContent } from '../components/Content'\nimport NewsArticleSideInfo from '../components/NewsArticleSideInfo'\nimport { site } from '../util/templating'\n\n// This is used by the website and for CMS previews\nexport const NewsArticle = ({author, content, image, date, tags, contentComponent}) => {\n    const BodyComponent = contentComponent || HTMLContent\n\n    return (\n      <React.Fragment>\n        <figure className=\"image\">\n          {image && <PreviewCompatibleImage imageInfo={image}/>} \n        </figure>\n        <br/>\n        <div className=\"columns\">\n          <div className=\"column is-one-fifth\">\n            <NewsArticleSideInfo author={author} date={date} tags={tags}/>\n          </div>\n          <div className=\"column\">\n            <BodyComponent content={content} />\n          </div>\n        </div>\n      </React.Fragment>\n)}\n\nNewsArticle.propTypes = {\n  author: NewsArticleSideInfo.propTypes.author,\n  content: PropTypes.node,\n  image: PreviewCompatibleImage.propTypes.imageInfo,\n  date: NewsArticleSideInfo.propTypes.date,\n  tags: NewsArticleSideInfo.propTypes.tags,\n  contentComponent: PropTypes.elementType\n}\n\nexport default site(NewsArticle)\n\nexport const query = graphql`\nquery newsArticleTemplate($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      ...NewsFragment\n    }\n    heroData: allMarkdownRemark(filter: {id: {eq: $id}}) {\n      ...HeroFragment\n    }\n  }\n`\n"],"sourceRoot":""}